import asyncio
from pyrogram import Client, filters
from pyrogram.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from cardgen import generate_card
from nidgen import generate_nid

BOT_TOKEN = "8274638806:AAFelCVIeQ12WockinqCWcdXcewDHb3_aGY"
API_ID = 12345678  # Replace with your API_ID from my.telegram.org
API_HASH = "your_api_hash"  # Replace with your API_HASH

bot = Client("TermuxCardGenBot", bot_token=BOT_TOKEN, api_id=API_ID, api_hash=API_HASH)

REQUIRED_CHANNEL = "TermuxHubBD"

@bot.on_message(filters.command("start"))
async def start(client, message):
    user = message.from_user

    try:
        chat_member = await client.get_chat_member(f"@{REQUIRED_CHANNEL}", user.id)
        if chat_member.status not in ("member", "administrator", "creator"):
            raise Exception("Not a member")
    except:
        join_button = InlineKeyboardMarkup([
            [InlineKeyboardButton("тЬЕ ржЪрзНржпрж╛ржирзЗрж▓рзЗ Join ржХрж░рзБржи", url=f"https://t.me/{REQUIRED_CHANNEL}")]
        ])
        return await message.reply("тЭМ ржЖржкржирж┐ ржЖржорж╛ржжрзЗрж░ ржЪрзНржпрж╛ржирзЗрж▓рзЗ Join ржХрж░рзЗржиржирж┐ред", reply_markup=join_button)

    buttons = ReplyKeyboardMarkup([
        ["ЁЯзо ржХрж╛рж░рзНржб ржЬрзЗржирж╛рж░рзЗржЯ ржХрж░рзБржи", "ЁЯЖФ ржлрзЗржХ ржПржиржЖржЗржбрж┐ ржХрж╛рж░рзНржб рждрзИрж░рж┐ ржХрж░рзБржи"],
        ["ЁЯУв ржЖржорж╛ржжрзЗрж░ ржЪрзНржпрж╛ржирзЗрж▓"]
    ], resize_keyboard=True)

    await message.reply(
        f"ЁЯСЛ рж╕рзНржмрж╛ржЧрждржо {user.first_name}!\n\nржирж┐ржЪрзЗрж░ ржЕржкрж╢ржиржЧрзБрж▓рзЛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЖржкржирж╛рж░ ржХрж╛ржЬ ржХрж░рзБржиред",
        reply_markup=buttons
    )

@bot.on_message(filters.text("ЁЯзо ржХрж╛рж░рзНржб ржЬрзЗржирж╛рж░рзЗржЯ ржХрж░рзБржи"))
async def gen_card(client, message):
    await message.reply("ЁЯТ│ BIN ржжрж┐ржи (6 ржбрж┐ржЬрж┐ржЯ):")

    @bot.on_message(filters.text & ~filters.command(["start"]))
    async def bin_reply(client, msg):
        bin_input = msg.text.strip()
        card = generate_card(bin_input)
        await msg.reply(f"ЁЯТ│ Card:\n`{card}`", quote=True)

@bot.on_message(filters.text("ЁЯЖФ ржлрзЗржХ ржПржиржЖржЗржбрж┐ ржХрж╛рж░рзНржб рждрзИрж░рж┐ ржХрж░рзБржи"))
async def fake_nid(client, message):
    await message.reply("ЁЯз╛ ржирж╛ржо, ржарж┐ржХрж╛ржирж╛, ржЬржирзНржорждрж╛рж░рж┐ржЦ ржжрж┐ржи\nFormat:\n`ржирж╛ржо | ржарж┐ржХрж╛ржирж╛ | DD/MM/YYYY`")

    @bot.on_message(filters.text & ~filters.command(["start"]))
    async def nid_input(client, msg):
        try:
            name, address, dob = map(str.strip, msg.text.split("|"))
            path = generate_nid(name, address, dob)
            await msg.reply_photo(photo=path, caption="тЬЕ ржлрзЗржХ ржПржиржЖржЗржбрж┐ ржХрж╛рж░рзНржб рждрзИрж░рж┐ рж╣ржпрж╝рзЗржЫрзЗ!")
        except:
            await msg.reply("тЭМ ржЗржиржкрзБржЯ ржнрзБрж▓ред рж╕ржарж┐ржХ ржлрж░ржорзНржпрж╛ржЯ: ржирж╛ржо | ржарж┐ржХрж╛ржирж╛ | DD/MM/YYYY")

@bot.on_message(filters.text("ЁЯУв ржЖржорж╛ржжрзЗрж░ ржЪрзНржпрж╛ржирзЗрж▓"))
async def channel(client, message):
    await message.reply("ЁЯУв ржЖржорж╛ржжрзЗрж░ ржЪрзНржпрж╛ржирзЗрж▓:\nЁЯСЙ https://t.me/TermuxHubBD")

bot.run()
